import typer
from models.query_parser import parse_question
from db.db_loader import execute_query

app = typer.Typer()

@app.command()
def ask(question: list[str] = typer.Argument(...)):
    """–ï–¥–∏–Ω–∏—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ"""
    full_question = " ".join(question)
    sql_query = parse_question(full_question)
    print("–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SQL-–∑–∞–ø—Ä–æ—Å:")
    print(sql_query)
    print("\n–û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å:")
    result = execute_query(sql_query)
    print(result)

@app.command()
def chat():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç —Å –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–æ–º"""
    print("üí¨ –ß–∞—Ç-—Ä–µ–∂–∏–º: –ø—Ä–æ—Å—Ç–æ –≤–≤–æ–¥–∏ –≤–æ–ø—Ä–æ—Å—ã. –ù–∞–ø–∏—à–∏ 'exit' –∏–ª–∏ 'quit' –¥–ª—è –≤—ã—Ö–æ–¥–∞.\n")

    while True:
        try:
            question = input("> ").strip()
            if question.lower() in {"exit", "quit"}:
                print("–î–æ –≤—Å—Ç—Ä–µ—á–∏!")
                break

            sql_query = parse_question(question)
            print("\n–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SQL-–∑–∞–ø—Ä–æ—Å:")
            print(sql_query)

            print("\n–û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å:")
            result = execute_query(sql_query)
            print(result)
            print()

        except KeyboardInterrupt:
            print("\n–î–æ –≤—Å—Ç—Ä–µ—á–∏!")
            break
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}\n")

if __name__ == "__main__":
    app()


